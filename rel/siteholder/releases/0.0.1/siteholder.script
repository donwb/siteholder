%% script generated at {2016,5,20} {20,55,18}
{script,
    {"siteholder","0.0.1"},
    [{preLoaded,
         [erl_prim_loader,erlang,erts_internal,init,otp_ring0,prim_eval,
          prim_file,prim_inet,prim_zip,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-4.2/ebin","$ROOT/lib/stdlib-2.8/ebin"]},
     {primLoad,[error_handler]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-4.2/ebin"]},
     {primLoad,
         [application,application_controller,application_master,
          application_starter,auth,code,code_server,disk_log,disk_log_1,
          disk_log_server,disk_log_sup,dist_ac,dist_util,erl_boot_server,
          erl_ddll,erl_distribution,erl_epmd,erl_reply,error_logger,
          erts_debug,file,file_io_server,file_server,gen_sctp,gen_tcp,gen_udp,
          global,global_group,global_search,group,heart,hipe_unified_loader,
          inet,inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,
          inet_db,inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel,kernel_config,net,
          net_adm,net_kernel,os,pg2,ram_file,rpc,seq_trace,standard_error,
          user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-2.8/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v8,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_expand,epp,erl_anno,erl_bits,erl_compile,erl_eval,
          erl_expand_records,erl_internal,erl_lint,erl_parse,erl_posix_msg,
          erl_pp,erl_scan,erl_tar,error_logger_file_h,error_logger_tty_h,
          escript,ets,eval_bits,file_sorter,filelib,filename,gb_sets,gb_trees,
          gen,gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,
          io_lib_fread,io_lib_pretty,lib,lists,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proc_lib,proplists,
          qlc,qlc_pt,queue,rand,random,re,sets,shell,shell_default,slave,sofs,
          string,supervisor,supervisor_bridge,sys,timer,unicode,win32reg,zip]},
     {path,["$ROOT/lib/getopt-0.8.2/ebin"]},
     {primLoad,[getopt]},
     {path,["$ROOT/lib/providers-1.6.0/ebin"]},
     {primLoad,[provider,providers,providers_topo]},
     {path,["$ROOT/lib/bbmustache-1.0.4/ebin"]},
     {primLoad,[bbmustache]},
     {path,["$ROOT/lib/cf-0.2.1/ebin"]},
     {primLoad,[cf,cf_term]},
     {path,["$ROOT/lib/erlware_commons-0.19.0/ebin"]},
     {primLoad,
         [ec_assoc_list,ec_cmd_log,ec_cnv,ec_compile,ec_date,ec_dict,
          ec_dictionary,ec_file,ec_gb_trees,ec_git_vsn,ec_lists,ec_orddict,
          ec_plists,ec_rbdict,ec_semver,ec_semver_parser,ec_talk,ec_vsn]},
     {path,["$ROOT/lib/relx-3.19.0/ebin"]},
     {primLoad,
         [relx,rlx_app_discovery,rlx_app_info,rlx_cmd_args,rlx_config,
          rlx_depsolver,rlx_depsolver_culprit,rlx_dscv_util,rlx_goal,
          rlx_goal_utils,rlx_prv_app_discover,rlx_prv_archive,
          rlx_prv_assembler,rlx_prv_overlay,rlx_prv_rel_discover,
          rlx_prv_release,rlx_prv_relup,rlx_rel_discovery,rlx_release,
          rlx_state,rlx_util]},
     {path,["$ROOT/lib/compiler-6.0.3/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bool,beam_bsm,beam_clean,beam_dead,
          beam_dict,beam_disasm,beam_except,beam_flatten,beam_jump,
          beam_listing,beam_opcodes,beam_peep,beam_receive,beam_split,
          beam_trim,beam_type,beam_utils,beam_validator,beam_z,cerl,
          cerl_clauses,cerl_inline,cerl_sets,cerl_trees,compile,core_lib,
          core_lint,core_parse,core_pp,core_scan,erl_bifs,rec_env,
          sys_core_dsetel,sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_pre_attributes,sys_pre_expand,v3_codegen,v3_core,v3_kernel,
          v3_kernel_pp,v3_life]},
     {path,["$ROOT/lib/elixir-1.2.5/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadFunctionError','Elixir.BadMapError',
          'Elixir.BadStructError','Elixir.Base','Elixir.Behaviour',
          'Elixir.Bitwise','Elixir.CaseClauseError','Elixir.Code',
          'Elixir.Code.LoadError','Elixir.Collectable',
          'Elixir.Collectable.BitString','Elixir.Collectable.File.Stream',
          'Elixir.Collectable.HashDict','Elixir.Collectable.HashSet',
          'Elixir.Collectable.IO.Stream','Elixir.Collectable.List',
          'Elixir.Collectable.Map','Elixir.Collectable.MapSet',
          'Elixir.CompileError','Elixir.CondClauseError','Elixir.Dict',
          'Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.File.Stream','Elixir.Enumerable.Function',
          'Elixir.Enumerable.GenEvent.Stream','Elixir.Enumerable.HashDict',
          'Elixir.Enumerable.HashSet','Elixir.Enumerable.IO.Stream',
          'Elixir.Enumerable.List','Elixir.Enumerable.Map',
          'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
          'Elixir.Enumerable.Stream','Elixir.ErlangError','Elixir.Exception',
          'Elixir.File','Elixir.File.CopyError','Elixir.File.Error',
          'Elixir.File.Stat','Elixir.File.Stream','Elixir.Float',
          'Elixir.FunctionClauseError','Elixir.GenEvent',
          'Elixir.GenEvent.Stream','Elixir.GenServer','Elixir.HashDict',
          'Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
          'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Error',
          'Elixir.Inspect.Float','Elixir.Inspect.Function',
          'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
          'Elixir.Inspect.Integer','Elixir.Inspect.List','Elixir.Inspect.Map',
          'Elixir.Inspect.MapSet','Elixir.Inspect.Opts','Elixir.Inspect.PID',
          'Elixir.Inspect.Port','Elixir.Inspect.Range',
          'Elixir.Inspect.Reference','Elixir.Inspect.Regex',
          'Elixir.Inspect.Stream','Elixir.Inspect.Tuple',
          'Elixir.Inspect.Version','Elixir.Inspect.Version.Requirement',
          'Elixir.Integer','Elixir.Kernel','Elixir.Kernel.CLI',
          'Elixir.Kernel.ErrorHandler','Elixir.Kernel.LexicalTracker',
          'Elixir.Kernel.ParallelCompiler','Elixir.Kernel.ParallelRequire',
          'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
          'Elixir.Kernel.Utils','Elixir.KeyError','Elixir.Keyword',
          'Elixir.List','Elixir.List.Chars','Elixir.List.Chars.Atom',
          'Elixir.List.Chars.BitString','Elixir.List.Chars.Float',
          'Elixir.List.Chars.Integer','Elixir.List.Chars.List','Elixir.Macro',
          'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet','Elixir.MatchError',
          'Elixir.Module','Elixir.Module.LocalsTracker','Elixir.Node',
          'Elixir.OptionParser','Elixir.Path','Elixir.Path.Wildcard',
          'Elixir.Port','Elixir.Process','Elixir.Protocol',
          'Elixir.Protocol.UndefinedError','Elixir.Range','Elixir.Record',
          'Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.RuntimeError','Elixir.Set',
          'Elixir.Stream','Elixir.Stream.Reducers','Elixir.String',
          'Elixir.String.Break','Elixir.String.Casing','Elixir.String.Chars',
          'Elixir.String.Chars.Atom','Elixir.String.Chars.BitString',
          'Elixir.String.Chars.Float','Elixir.String.Chars.Integer',
          'Elixir.String.Chars.List','Elixir.String.Chars.URI',
          'Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement',
          'Elixir.String.Normalizer','Elixir.String.Unicode',
          'Elixir.StringIO','Elixir.Supervisor','Elixir.Supervisor.Default',
          'Elixir.Supervisor.Spec','Elixir.SyntaxError','Elixir.System',
          'Elixir.SystemLimitError','Elixir.Task','Elixir.Task.Supervised',
          'Elixir.Task.Supervisor','Elixir.TokenMissingError',
          'Elixir.TryClauseError','Elixir.Tuple','Elixir.URI',
          'Elixir.UndefinedFunctionError','Elixir.UnicodeConversionError',
          'Elixir.Version','Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Parser.DSL','Elixir.Version.Requirement',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_counter,
          elixir_def,elixir_def_defaults,elixir_def_overridable,
          elixir_dispatch,elixir_env,elixir_errors,elixir_exp,
          elixir_exp_clauses,elixir_fn,elixir_for,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_parser,elixir_quote,elixir_rewrite,
          elixir_scope,elixir_sup,elixir_tokenizer,elixir_translator,
          elixir_try,elixir_utils,elixir_with]},
     {path,["$ROOT/lib/logger-1.2.5/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.Backends.Console','Elixir.Logger.Config',
          'Elixir.Logger.ErrorHandler','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher']},
     {path,["$ROOT/lib/exrm-1.0.4/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.Release','Elixir.Mix.Tasks.Release.Clean',
          'Elixir.Mix.Tasks.Release.Plugins','Elixir.ReleaseManager.Appups',
          'Elixir.ReleaseManager.Config','Elixir.ReleaseManager.Deps',
          'Elixir.ReleaseManager.Plugin',
          'Elixir.ReleaseManager.Plugin.Appups',
          'Elixir.ReleaseManager.Plugin.Consolidation',
          'Elixir.ReleaseManager.Utils','Elixir.ReleaseManager.Utils.Logger']},
     {path,["$ROOT/lib/crypto-3.6.3/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/plug-0.14.0/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Plug.Conn','Elixir.Inspect.Plug.Conn',
          'Elixir.Plug','Elixir.Plug.Adapters.Cowboy',
          'Elixir.Plug.Adapters.Cowboy.Conn',
          'Elixir.Plug.Adapters.Cowboy.Handler',
          'Elixir.Plug.Adapters.Test.Conn','Elixir.Plug.Adapters.Translator',
          'Elixir.Plug.Builder','Elixir.Plug.CSRFProtection',
          'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
          'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
          'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
          'Elixir.Plug.Conn.AlreadySentError','Elixir.Plug.Conn.Cookies',
          'Elixir.Plug.Conn.InvalidHeaderKeyFormatError',
          'Elixir.Plug.Conn.NotSentError','Elixir.Plug.Conn.Query',
          'Elixir.Plug.Conn.Status','Elixir.Plug.Conn.Unfetched',
          'Elixir.Plug.Conn.Utils','Elixir.Plug.Conn.WrapperError',
          'Elixir.Plug.Crypto','Elixir.Plug.Crypto.KeyGenerator',
          'Elixir.Plug.Crypto.MessageEncryptor',
          'Elixir.Plug.Crypto.MessageVerifier','Elixir.Plug.Debugger',
          'Elixir.Plug.ErrorHandler','Elixir.Plug.Exception',
          'Elixir.Plug.Exception.Any','Elixir.Plug.HTML','Elixir.Plug.Head',
          'Elixir.Plug.Logger','Elixir.Plug.MIME',
          'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
          'Elixir.Plug.Parsers.BadEncodingError','Elixir.Plug.Parsers.JSON',
          'Elixir.Plug.Parsers.MULTIPART','Elixir.Plug.Parsers.ParseError',
          'Elixir.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Parsers.URLENCODED',
          'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.RequestId','Elixir.Plug.Router',
          'Elixir.Plug.Router.InvalidSpecError','Elixir.Plug.Router.Utils',
          'Elixir.Plug.SSL','Elixir.Plug.Session',
          'Elixir.Plug.Session.COOKIE','Elixir.Plug.Session.ETS',
          'Elixir.Plug.Session.Store','Elixir.Plug.Static',
          'Elixir.Plug.Static.InvalidPathError','Elixir.Plug.Supervisor',
          'Elixir.Plug.Test','Elixir.Plug.Upload']},
     {path,["$ROOT/lib/cowlib-1.0.2/ebin"]},
     {primLoad,
         [cow_cookie,cow_date,cow_http,cow_http_hd,cow_http_te,cow_mimetypes,
          cow_multipart,cow_qs,cow_spdy]},
     {path,["$ROOT/lib/ranch-1.2.1/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_listener_sup,ranch_protocol,ranch_server,ranch_ssl,ranch_sup,
          ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/cowboy-1.0.4/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_clock,cowboy_handler,
          cowboy_http,cowboy_http_handler,cowboy_loop_handler,
          cowboy_middleware,cowboy_protocol,cowboy_req,cowboy_rest,
          cowboy_router,cowboy_spdy,cowboy_static,cowboy_sub_protocol,
          cowboy_sup,cowboy_websocket,cowboy_websocket_handler]},
     {path,["$ROOT/lib/siteholder-0.0.1/ebin"]},
     {primLoad,['Elixir.Siteholder','Elixir.Siteholder.Router']},
     {path,["$ROOT/lib/iex-1.2.5/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.CLI','Elixir.IEx.Config','Elixir.IEx.Evaluator',
          'Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.History.State','Elixir.IEx.Info','Elixir.IEx.Info.Any',
          'Elixir.IEx.Info.Atom','Elixir.IEx.Info.BitString',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Tuple',
          'Elixir.IEx.Introspection','Elixir.IEx.Remsh','Elixir.IEx.Server',
          'Elixir.IEx.State']},
     {path,["$ROOT/lib/sasl-2.7/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,overload,rb,
          rb_format_supp,release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,si,si_sasl_supp,systools,
          systools_lib,systools_make,systools_rc,systools_relup]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-4.2/ebin","$ROOT/lib/stdlib-2.8/ebin",
          "$ROOT/lib/getopt-0.8.2/ebin","$ROOT/lib/providers-1.6.0/ebin",
          "$ROOT/lib/bbmustache-1.0.4/ebin","$ROOT/lib/cf-0.2.1/ebin",
          "$ROOT/lib/erlware_commons-0.19.0/ebin",
          "$ROOT/lib/relx-3.19.0/ebin","$ROOT/lib/compiler-6.0.3/ebin",
          "$ROOT/lib/elixir-1.2.5/ebin","$ROOT/lib/logger-1.2.5/ebin",
          "$ROOT/lib/exrm-1.0.4/ebin","$ROOT/lib/crypto-3.6.3/ebin",
          "$ROOT/lib/plug-0.14.0/ebin","$ROOT/lib/cowlib-1.0.2/ebin",
          "$ROOT/lib/ranch-1.2.1/ebin","$ROOT/lib/cowboy-1.0.4/ebin",
          "$ROOT/lib/siteholder-0.0.1/ebin","$ROOT/lib/iex-1.2.5/ebin",
          "$ROOT/lib/sasl-2.7/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,error_logger,{error_logger,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"4.2"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        error_handler,error_logger,file,file_server,
                        file_io_server,global,global_group,global_search,
                        group,heart,hipe_unified_loader,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,net,net_adm,net_kernel,os,ram_file,rpc,
                        user,user_drv,user_sup,disk_log,disk_log_1,
                        disk_log_server,disk_log_sup,dist_ac,erl_ddll,
                        erl_epmd,erts_debug,gen_tcp,gen_udp,gen_sctp,inet,
                        inet_db,inet_dns,inet_parse,inet_res,inet_tcp,
                        inet_udp,inet_sctp,pg2,seq_trace,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_sup,net_kernel,net_sup,rex,
                        user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[{error_logger,tty}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"2.8"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v8,dets_v9,dict,
                        digraph,digraph_utils,edlin,edlin_expand,epp,
                        eval_bits,erl_anno,erl_bits,erl_compile,erl_eval,
                        erl_expand_records,erl_internal,erl_lint,erl_parse,
                        erl_posix_msg,erl_pp,erl_scan,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,
                        io_lib_fread,io_lib_pretty,lib,lists,log_mf_h,maps,
                        math,ms_transform,orddict,ordsets,otp_internal,pool,
                        proc_lib,proplists,qlc,qlc_pt,queue,rand,random,re,
                        sets,shell,shell_default,slave,sofs,string,supervisor,
                        supervisor_bridge,sys,timer,unicode,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,getopt,
                  [{description,"Command-line options parser for Erlang"},
                   {vsn,"0.8.2"},
                   {id,[]},
                   {modules,[getopt]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,providers,
                  [{description,"Providers provider."},
                   {vsn,"1.6.0"},
                   {id,[]},
                   {modules,[provider,providers,providers_topo]},
                   {registered,[]},
                   {applications,[getopt,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,bbmustache,
                  [{description,
                       "Binary pattern match Based Mustache template engine for Erlang/OTP"},
                   {vsn,"1.0.4"},
                   {id,[]},
                   {modules,[bbmustache]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cf,
                  [{description,"Terminal colour helper"},
                   {vsn,"0.2.1"},
                   {id,[]},
                   {modules,[cf,cf_term]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,erlware_commons,
                  [{description,"Additional standard library for Erlang"},
                   {vsn,"0.19.0"},
                   {id,[]},
                   {modules,
                       [ec_assoc_list,ec_cmd_log,ec_cnv,ec_compile,ec_date,
                        ec_dict,ec_dictionary,ec_file,ec_gb_trees,ec_git_vsn,
                        ec_lists,ec_orddict,ec_plists,ec_rbdict,ec_semver,
                        ec_semver_parser,ec_talk,ec_vsn]},
                   {registered,[]},
                   {applications,[stdlib,kernel,cf]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,relx,
                  [{description,"Release assembler for Erlang/OTP Releases"},
                   {vsn,"3.19.0"},
                   {id,[]},
                   {modules,
                       [relx,rlx_app_discovery,rlx_app_info,rlx_cmd_args,
                        rlx_config,rlx_depsolver,rlx_depsolver_culprit,
                        rlx_dscv_util,rlx_goal,rlx_goal_utils,
                        rlx_prv_app_discover,rlx_prv_archive,
                        rlx_prv_assembler,rlx_prv_overlay,
                        rlx_prv_rel_discover,rlx_prv_release,rlx_prv_relup,
                        rlx_rel_discovery,rlx_release,rlx_state,rlx_util]},
                   {registered,[]},
                   {applications,
                       [getopt,stdlib,kernel,providers,bbmustache,
                        erlware_commons]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"6.0.3"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_bool,beam_bsm,
                        beam_clean,beam_dead,beam_dict,beam_disasm,
                        beam_except,beam_flatten,beam_jump,beam_listing,
                        beam_opcodes,beam_peep,beam_receive,beam_split,
                        beam_trim,beam_type,beam_utils,beam_validator,beam_z,
                        cerl,cerl_clauses,cerl_inline,cerl_sets,cerl_trees,
                        compile,core_scan,core_lint,core_parse,core_pp,
                        core_lib,erl_bifs,rec_env,sys_core_dsetel,
                        sys_core_fold,sys_core_fold_lists,sys_core_inline,
                        sys_pre_attributes,sys_pre_expand,v3_codegen,v3_core,
                        v3_kernel,v3_kernel_pp,v3_life]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.2.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadFunctionError',
                        'Elixir.BadMapError','Elixir.BadStructError',
                        'Elixir.Base','Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.CaseClauseError','Elixir.Code',
                        'Elixir.Code.LoadError','Elixir.Collectable',
                        'Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.CompileError',
                        'Elixir.CondClauseError','Elixir.Dict','Elixir.Enum',
                        'Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.ErlangError',
                        'Elixir.Exception','Elixir.File',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.Stat','Elixir.File.Stream',
                        'Elixir.Float','Elixir.FunctionClauseError',
                        'Elixir.GenEvent','Elixir.GenEvent.Stream',
                        'Elixir.GenServer','Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO','Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
                        'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.Inspect',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Error','Elixir.Inspect.Float',
                        'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
                        'Elixir.Inspect.HashSet','Elixir.Inspect.Integer',
                        'Elixir.Inspect.List','Elixir.Inspect.Map',
                        'Elixir.Inspect.MapSet','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Tuple','Elixir.Inspect.Version',
                        'Elixir.Inspect.Version.Requirement','Elixir.Integer',
                        'Elixir.Kernel','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.KeyError',
                        'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.Macro',
                        'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet',
                        'Elixir.MatchError','Elixir.Module',
                        'Elixir.Module.LocalsTracker','Elixir.Node',
                        'Elixir.OptionParser','Elixir.Path',
                        'Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
                        'Elixir.Protocol','Elixir.Protocol.UndefinedError',
                        'Elixir.Range','Elixir.Record',
                        'Elixir.Record.Extractor','Elixir.Regex',
                        'Elixir.Regex.CompileError','Elixir.RuntimeError',
                        'Elixir.Set','Elixir.Stream','Elixir.Stream.Reducers',
                        'Elixir.String','Elixir.String.Break',
                        'Elixir.String.Casing','Elixir.String.Chars',
                        'Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Normalizer','Elixir.String.Unicode',
                        'Elixir.StringIO','Elixir.Supervisor',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.SyntaxError','Elixir.System',
                        'Elixir.SystemLimitError','Elixir.Task',
                        'Elixir.Task.Supervised','Elixir.Task.Supervisor',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError','Elixir.Version',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Parser.DSL',
                        'Elixir.Version.Requirement',elixir,elixir_aliases,
                        elixir_bitstring,elixir_bootstrap,elixir_clauses,
                        elixir_code_server,elixir_compiler,elixir_config,
                        elixir_counter,elixir_def,elixir_def_defaults,
                        elixir_def_overridable,elixir_dispatch,elixir_env,
                        elixir_errors,elixir_exp,elixir_exp_clauses,elixir_fn,
                        elixir_for,elixir_import,elixir_interpolation,
                        elixir_lexical,elixir_locals,elixir_map,elixir_module,
                        elixir_parser,elixir_quote,elixir_rewrite,
                        elixir_scope,elixir_sup,elixir_tokenizer,
                        elixir_translator,elixir_try,elixir_utils,
                        elixir_with]},
                   {registered,[elixir_config,elixir_code_server]},
                   {applications,[stdlib,kernel,compiler]},
                   {included_applications,[]},
                   {env,[{ansi_enabled,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.2.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.ErrorHandler',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils','Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.Supervisor',
                        'Elixir.Logger.Watcher']},
                   {applications,[stdlib,kernel,elixir]},
                   {included_applications,[]},
                   {env,
                       [{level,debug},
                        {utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {compile_time_purge_level,debug},
                        {compile_time_application,nil},
                        {discard_threshold_for_error_logger,500},
                        {translator_inspect_opts,[]},
                        {console,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,exrm,
                  [{description,
                       "Exrm, or Elixir Release Manager, provides mix tasks for building,\nupgrading, and controlling release packages for your application.\n"},
                   {vsn,"1.0.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.Release',
                        'Elixir.Mix.Tasks.Release.Clean',
                        'Elixir.Mix.Tasks.Release.Plugins',
                        'Elixir.ReleaseManager.Appups',
                        'Elixir.ReleaseManager.Config',
                        'Elixir.ReleaseManager.Deps',
                        'Elixir.ReleaseManager.Plugin',
                        'Elixir.ReleaseManager.Plugin.Appups',
                        'Elixir.ReleaseManager.Plugin.Consolidation',
                        'Elixir.ReleaseManager.Utils',
                        'Elixir.ReleaseManager.Utils.Logger']},
                   {registered,[]},
                   {applications,[stdlib,kernel,relx,logger,elixir]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"3.6.3"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug,
                  [{description,
                       "A specification and conveniences for composable modules in between web applications"},
                   {vsn,"0.14.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Plug.Conn',
                        'Elixir.Inspect.Plug.Conn','Elixir.Plug',
                        'Elixir.Plug.Adapters.Cowboy',
                        'Elixir.Plug.Adapters.Cowboy.Conn',
                        'Elixir.Plug.Adapters.Cowboy.Handler',
                        'Elixir.Plug.Adapters.Test.Conn',
                        'Elixir.Plug.Adapters.Translator',
                        'Elixir.Plug.Builder','Elixir.Plug.CSRFProtection',
                        'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
                        'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
                        'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
                        'Elixir.Plug.Conn.AlreadySentError',
                        'Elixir.Plug.Conn.Cookies',
                        'Elixir.Plug.Conn.InvalidHeaderKeyFormatError',
                        'Elixir.Plug.Conn.NotSentError',
                        'Elixir.Plug.Conn.Query','Elixir.Plug.Conn.Status',
                        'Elixir.Plug.Conn.Unfetched','Elixir.Plug.Conn.Utils',
                        'Elixir.Plug.Conn.WrapperError','Elixir.Plug.Crypto',
                        'Elixir.Plug.Crypto.KeyGenerator',
                        'Elixir.Plug.Crypto.MessageEncryptor',
                        'Elixir.Plug.Crypto.MessageVerifier',
                        'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
                        'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
                        'Elixir.Plug.HTML','Elixir.Plug.Head',
                        'Elixir.Plug.Logger','Elixir.Plug.MIME',
                        'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
                        'Elixir.Plug.Parsers.BadEncodingError',
                        'Elixir.Plug.Parsers.JSON',
                        'Elixir.Plug.Parsers.MULTIPART',
                        'Elixir.Plug.Parsers.ParseError',
                        'Elixir.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Parsers.URLENCODED',
                        'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.RequestId','Elixir.Plug.Router',
                        'Elixir.Plug.Router.InvalidSpecError',
                        'Elixir.Plug.Router.Utils','Elixir.Plug.SSL',
                        'Elixir.Plug.Session','Elixir.Plug.Session.COOKIE',
                        'Elixir.Plug.Session.ETS','Elixir.Plug.Session.Store',
                        'Elixir.Plug.Static',
                        'Elixir.Plug.Static.InvalidPathError',
                        'Elixir.Plug.Supervisor','Elixir.Plug.Test',
                        'Elixir.Plug.Upload']},
                   {registered,[]},
                   {applications,[stdlib,kernel,logger,elixir,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug',[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"1.0.2"},
                   {id,"git"},
                   {modules,
                       [cow_cookie,cow_date,cow_http,cow_http_hd,cow_http_te,
                        cow_mimetypes,cow_multipart,cow_qs,cow_spdy]},
                   {registered,[]},
                   {applications,[stdlib,kernel,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.2.1"},
                   {id,"git"},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_listener_sup,ranch_protocol,
                        ranch_server,ranch_ssl,ranch_sup,ranch_tcp,
                        ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modular HTTP server."},
                   {vsn,"1.0.4"},
                   {id,"git"},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_clock,
                        cowboy_handler,cowboy_http,cowboy_http_handler,
                        cowboy_loop_handler,cowboy_middleware,cowboy_protocol,
                        cowboy_req,cowboy_rest,cowboy_router,cowboy_spdy,
                        cowboy_static,cowboy_sub_protocol,cowboy_sup,
                        cowboy_websocket,cowboy_websocket_handler]},
                   {registered,[cowboy_clock,cowboy_sup]},
                   {applications,[stdlib,kernel,crypto,cowlib,ranch]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,siteholder,
                  [{description,"siteholder"},
                   {vsn,"0.0.1"},
                   {id,[]},
                   {modules,['Elixir.Siteholder','Elixir.Siteholder.Router']},
                   {registered,[]},
                   {applications,
                       [stdlib,kernel,logger,elixir,exrm,plug,cowboy]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Siteholder',[]}}]}]}},
     {apply,
         {application,load,
             [{application,iex,
                  [{description,"iex"},
                   {vsn,"1.2.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.IEx','Elixir.IEx.App',
                        'Elixir.IEx.Autocomplete','Elixir.IEx.CLI',
                        'Elixir.IEx.Config','Elixir.IEx.Evaluator',
                        'Elixir.IEx.Helpers','Elixir.IEx.History',
                        'Elixir.IEx.History.State','Elixir.IEx.Info',
                        'Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
                        'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Float',
                        'Elixir.IEx.Info.Function','Elixir.IEx.Info.Integer',
                        'Elixir.IEx.Info.List','Elixir.IEx.Info.Map',
                        'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
                        'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Tuple',
                        'Elixir.IEx.Introspection','Elixir.IEx.Remsh',
                        'Elixir.IEx.Server','Elixir.IEx.State']},
                   {registered,['Elixir.IEx.Supervisor','Elixir.IEx.Config']},
                   {applications,[stdlib,kernel,elixir]},
                   {included_applications,[]},
                   {env,
                       [{autocomplete_server,'Elixir.IEx.Server'},
                        {colors,[]},
                        {inspect,[]},
                        {history_size,20},
                        {default_prompt,<<"%prefix(%counter)>">>},
                        {alive_prompt,<<"%prefix(%node)%counter>">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.IEx.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"2.7"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,overload,
                        rb,rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,si,si_sasl_supp,systools,
                        systools_make,systools_rc,systools_relup,
                        systools_lib]},
                   {registered,
                       [sasl_sup,alarm_handler,overload,release_handler]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{sasl_error_logger,tty},{errlog_type,all}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[getopt,permanent]}},
     {apply,{application,start_boot,[providers,permanent]}},
     {apply,{application,start_boot,[bbmustache,permanent]}},
     {apply,{application,start_boot,[cf,permanent]}},
     {apply,{application,start_boot,[erlware_commons,permanent]}},
     {apply,{application,start_boot,[relx,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[exrm,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[plug,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[siteholder,permanent]}},
     {apply,{application,start_boot,[iex,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
